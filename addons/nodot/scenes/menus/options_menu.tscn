[gd_scene load_steps=26 format=3 uid="uid://dj1v33w5ffysa"]

[ext_resource type="Script" path="res://addons/nodot/menus/MenuContainer.gd" id="1_0h6t2"]
[ext_resource type="Script" path="res://addons/nodot/utility/WindowSizeConnector.gd" id="2_ffg2c"]
[ext_resource type="Script" path="res://addons/nodot/signaling/SignalConnector.gd" id="3_nn3pg"]

[sub_resource type="GDScript" id="GDScript_p2nii"]
resource_name = "optionsmenucontrol"
script/source = "extends Node

@onready var menu_container: MenuContainer = get_parent()
@onready var menu_manager: MenuManager = get_parent().get_parent()

func _input(event: InputEvent):
	if menu_container.visible and event.is_action_pressed(\"escape\"):
		menu_manager.go_back()
"

[sub_resource type="GDScript" id="GDScript_55485"]
script/source = "extends TextureRect

@export var menu_container: MenuContainer;

func _ready():
	menu_container.connect(\"hiding\", hide)
"

[sub_resource type="GDScript" id="GDScript_l8cix"]
resource_name = "displaymode"
script/source = "extends MenuButton

@onready var popup = get_popup()

const display_mode_names = [\"Windowed\", \"x\", \"x\", \"Fullscreen\", \"Exclusive Fullscreen\"]

func _ready():
	popup.connect(\"id_pressed\", _on_pressed)
	update_text()

func _on_mouse_entered():
	%OptionsMenuControl.get_node(\"SFX/HoverTick\").play();

func _on_pressed(item_id: int):
	%OptionsMenuControl.get_node(\"SFX/ClickTick\").play();
	VideoManager.display_mode = item_id as DisplayServer.WindowMode
	update_text()
			
func update_text():
	text = display_mode_names[VideoManager.display_mode]
"

[sub_resource type="GDScript" id="GDScript_61kd7"]
resource_name = "screenselect"
script/source = "extends MenuButton

@onready var popup = get_popup()

func _ready():
	popup.connect(\"id_pressed\", _on_pressed)
	for i in VideoManager.get_screen_count():
		popup.add_item(str(i), i)
	update_text()
	
func _on_mouse_entered():
	%OptionsMenuControl.get_node(\"SFX/HoverTick\").play();

func _on_pressed(item_id: int):
	%OptionsMenuControl.get_node(\"SFX/ClickTick\").play();
	VideoManager.screen = item_id
	update_text()
			
func update_text():
	text = str(VideoManager.screen)
"

[sub_resource type="GDScript" id="GDScript_h7hm4"]
script/source = "extends MenuButton

@onready var popup = get_popup()

var frame_rates = [0, 25, 30, 60, 144, 240, 360]

func _ready():
	popup.connect(\"id_pressed\", _on_pressed)
	update_text()
	
func _on_mouse_entered():
	%OptionsMenuControl.get_node(\"SFX/HoverTick\").play();

func _on_pressed(item_id: int):
	%OptionsMenuControl.get_node(\"SFX/ClickTick\").play();
	match item_id:
		0: VideoManager.fps_limit = frame_rates[0]
		1: VideoManager.fps_limit = frame_rates[1]
		2: VideoManager.fps_limit = frame_rates[2]
		3: VideoManager.fps_limit = frame_rates[3]
		4: VideoManager.fps_limit = frame_rates[4]
		5: VideoManager.fps_limit = frame_rates[5]
		6: VideoManager.fps_limit = frame_rates[6]
	update_text()
			
func update_text():
	text = popup.get_item_text(frame_rates.find(VideoManager.fps_limit))
"

[sub_resource type="GDScript" id="GDScript_f8lsk"]
resource_name = "vsync"
script/source = "extends CheckButton

func _ready():
	button_pressed = VideoManager.vsync

func _on_mouse_entered():
	%OptionsMenuControl.get_node(\"SFX/HoverTick\").play();

func _on_pressed():
	%OptionsMenuControl.get_node(\"SFX/ClickTick\").play();
	VideoManager.vsync = button_pressed
"

[sub_resource type="GDScript" id="GDScript_knrud"]
resource_name = "msaabtn"
script/source = "extends MenuButton

@onready var popup = get_popup()

func _ready():
	popup.connect(\"id_pressed\", _on_pressed)
	update_text()
	
func _on_mouse_entered():
	%OptionsMenuControl.get_node(\"SFX/HoverTick\").play();

func _on_pressed(item_id: int):
	%OptionsMenuControl.get_node(\"SFX/ClickTick\").play();
	match item_id:
		0: VideoManager.msaa = Viewport.MSAA_DISABLED
		1: VideoManager.msaa = Viewport.MSAA_2X
		2: VideoManager.msaa = Viewport.MSAA_4X
		3: VideoManager.msaa = Viewport.MSAA_8X
	update_text()
			
func update_text():
	text = popup.get_item_text(VideoManager.msaa)
"

[sub_resource type="GDScript" id="GDScript_j2ipi"]
resource_name = "brightness"
script/source = "extends HSlider

func _on_value_changed(new_value):
	%OptionsMenuControl.get_node(\"SFX/ClickTick\").play();
	VideoManager.brightness = new_value
"

[sub_resource type="GDScript" id="GDScript_2332y"]
resource_name = "masterslider"
script/source = "extends HSlider

func _ready():
	var converted_volume = AudioManager._convert_volume(AudioManager.master_volume)
	value = converted_volume * 100
	
func _on_value_changed(new_value):
	%OptionsMenuControl.get_node(\"SFX/ClickTick\").play();
	AudioManager.set_master_volume_decimal(new_value / 100)
"

[sub_resource type="GDScript" id="GDScript_ninhr"]
resource_name = "music_slider"
script/source = "extends HSlider

func _ready():
	var converted_volume = AudioManager._convert_volume(AudioManager.music_volume)
	value = converted_volume * 100
	
func _on_value_changed(new_value):
	%OptionsMenuControl.get_node(\"SFX/ClickTick\").play();
	AudioManager.set_music_volume_decimal(new_value / 100)
"

[sub_resource type="GDScript" id="GDScript_bjj28"]
resource_name = "sfxslider"
script/source = "extends HSlider

func _ready():
	var converted_volume = AudioManager._convert_volume(AudioManager.sfx_volume)
	value = converted_volume * 100
	
func _on_value_changed(new_value):
	%OptionsMenuControl.get_node(\"SFX/ClickTick\").play();
	AudioManager.set_sfx_volume_decimal(new_value / 100)
"

[sub_resource type="GDScript" id="GDScript_tnn2v"]
resource_name = "revertbtn"
script/source = "extends Button

@export var nodes: Array[Node] = []

var default_values: Dictionary = {
	\"HSlider\": 90,
	\"HSlider2\": 90,
	\"HSlider3\": 90
}

func revert():
	for node in nodes:
		if \"value\" in node:
			node.value = default_values[node.name]

func _on_mouse_entered():
	%OptionsMenuControl.get_node(\"SFX/HoverTick\").play();

func _on_pressed():
	%OptionsMenuControl.get_node(\"SFX/ClickTick\").play();
	revert()
"

[sub_resource type="GDScript" id="GDScript_iaxat"]
resource_name = "mouse_sensitivity"
script/source = "extends HSlider

func _ready():
	value = InputManager.mouse_sensitivity
	
func _on_value_changed(new_value):
	%OptionsMenuControl.get_node(\"SFX/ClickTick\").play();
	InputManager.mouse_sensitivity = new_value
"

[sub_resource type="GDScript" id="GDScript_ljq8r"]
resource_name = "keybindings"
script/source = "extends GridContainer

@export var reset_btn: Button
@export var ignored_actions: Array[String] = [\"escape\"]

var target_action_name: String = \"\"
var target_key_name: String = \"\"
var target_button: Button

func _ready():
	%InputEntryPanel.visible = false
	reset_btn.connect(\"pressed\", reset)
	await get_tree().process_frame
	populate_controls()
	
func reset():
	var children = get_children()
	var labels = children.slice(0, 3)
	for child in children:
		if !labels.has(child):
			child.queue_free()
	InputManager.reset_to_defaults()
	populate_controls()
			
func populate_controls():
	for action in InputMap.get_actions():
		if !action.begins_with(\"ui_\") and !ignored_actions.has(action):
			var action_label: Label = Label.new()
			var action_title = action.replace(\"_\", \" \")
			action_title = action_title[0].to_upper() + action_title.substr(1, -1)
			action_label.text = action_title
			action_label.tooltip_text = action
			add_child(action_label)
			
			var input_button: Button = Button.new()
			input_button.flat = true
			input_button.alignment = HORIZONTAL_ALIGNMENT_LEFT
			input_button.focus_mode = Control.FOCUS_NONE
			input_button.text = InputManager.get_action_key(action)
			input_button.connect(\"pressed\", _input_button_clicked.bind(action, input_button))
			add_child(input_button)

			var joy_input_button: Button = Button.new()
			joy_input_button.flat = true
			joy_input_button.alignment = HORIZONTAL_ALIGNMENT_LEFT
			joy_input_button.focus_mode = Control.FOCUS_NONE
			joy_input_button.text = _clean_key_name_text(InputManager.get_action_joy(action))
			joy_input_button.connect(\"pressed\", _input_button_clicked.bind(action, joy_input_button))
			add_child(joy_input_button)
			
func _input(event: InputEvent):
	if target_action_name != \"\":
		if event is InputEventMouseMotion:
			return
		
		InputManager.remove_action(target_action_name, target_key_name)
		if event is InputEventKey:
			InputManager.add_action(target_action_name, event.keycode, 0)
		if event is InputEventMouseButton:
			InputManager.add_action(target_action_name, event.button_index, 1)
		if event is InputEventJoypadButton:
			InputManager.add_action(target_action_name, event.button_index, 2)
			
		target_button.text = _clean_key_name_text(InputManager.get_action_key(target_action_name))
		
		target_action_name = \"\"
		target_key_name = \"\"
		%InputEntryPanel.visible = false
		
func _input_button_clicked(action_name: String, button: Button):
	target_action_name = action_name
	target_key_name = button.text
	target_button = button
	%InputEntryPanel.visible = true

func _clean_key_name_text(key_name: String):
	return key_name.get_slice(\"(\", 0)
"

[sub_resource type="StyleBoxFlat" id="StyleBoxFlat_f47jc"]
bg_color = Color(0.0431373, 0.0431373, 0.0431373, 0.431373)

[sub_resource type="StyleBoxFlat" id="StyleBoxFlat_f6rt3"]
bg_color = Color(0.0313726, 0.0313726, 0.0313726, 0.431373)

[sub_resource type="StyleBoxFlat" id="StyleBoxFlat_w0kid"]
bg_color = Color(0.0901961, 0.0901961, 0.0901961, 0.431373)

[sub_resource type="GDScript" id="GDScript_yprk4"]
resource_name = "closebtn"
script/source = "extends Button

@onready var menu_manager: MenuManager = %OptionsMenuControl.menu_manager

func _ready():
	connect(\"focus_entered\", hover)
	connect(\"mouse_entered\", hover)
	connect(\"pressed\", action)
	connect(\"gui_input\", func(event: InputEvent):
		if event.is_action_pressed(\"ui_select\"):
			action()
	)
	
func hover():
	%OptionsMenuControl.get_node(\"SFX/HoverTick\").play();

func action():
	%OptionsMenuControl.get_node(\"SFX/ClickTick\").play();
	AudioManager.save_config()
	VideoManager.save_config()
	InputManager.save_config()
	menu_manager.go_back()
"

[sub_resource type="GDScript" id="GDScript_vqvxb"]
script/source = "extends HBoxContainer

@export var menus: Array[Container];

func hide_all():
	for c in menus:
		c.hide();

func _on_mouse_entered():
	%OptionsMenuControl.get_node(\"SFX/HoverTick\").play();


func _on_video_pressed():
	%OptionsMenuControl.get_node(\"SFX/ClickTick\").play();
	hide_all();
	menus[0].show();


func _on_audio_pressed():
	%OptionsMenuControl.get_node(\"SFX/ClickTick\").play();
	hide_all();
	menus[1].show();


func _on_controls_pressed():
	%OptionsMenuControl.get_node(\"SFX/ClickTick\").play();
	hide_all();
	menus[2].show();

func _on_game_pressed():
	%OptionsMenuControl.get_node(\"SFX/ClickTick\").play();
	hide_all();
	menus[3].show();
"

[sub_resource type="StyleBoxFlat" id="StyleBoxFlat_bw13l"]
bg_color = Color(0.0470588, 0.0470588, 0.0470588, 0.431373)
skew = Vector2(-0.2, 0)

[sub_resource type="StyleBoxFlat" id="StyleBoxFlat_sp650"]
bg_color = Color(0.0784314, 0.0784314, 0.0784314, 0.431373)
skew = Vector2(-0.2, 0)

[sub_resource type="StyleBoxFlat" id="StyleBoxFlat_x6qco"]
bg_color = Color(0.145098, 0.145098, 0.145098, 0.431373)
skew = Vector2(-0.2, 0)

[node name="OptionsMenuContainer" type="Node2D" node_paths=PackedStringArray("selectable_items")]
process_mode = 3
script = ExtResource("1_0h6t2")
selectable_items = [NodePath("Control/CloseButton")]

[node name="OptionsMenuControl" type="Node" parent="."]
unique_name_in_owner = true
script = SubResource("GDScript_p2nii")

[node name="BGM" type="Node" parent="OptionsMenuControl"]

[node name="AudioStreamPlayer" type="AudioStreamPlayer" parent="OptionsMenuControl/BGM"]

[node name="MusicStartSignalConnector" type="Node" parent="OptionsMenuControl/BGM" node_paths=PackedStringArray("trigger_node", "target_node")]
script = ExtResource("3_nn3pg")
trigger_node = NodePath("../../..")
target_node = NodePath("../AudioStreamPlayer")
trigger_signal = "showing"
target_method = "play"

[node name="MusicStopSignalConnector" type="Node" parent="OptionsMenuControl/BGM" node_paths=PackedStringArray("trigger_node", "target_node")]
script = ExtResource("3_nn3pg")
trigger_node = NodePath("../../..")
target_node = NodePath("../AudioStreamPlayer")
trigger_signal = "hiding"
target_method = "stop"

[node name="SFX" type="Node" parent="OptionsMenuControl"]

[node name="HoverTick" type="AudioStreamPlayer" parent="OptionsMenuControl/SFX"]

[node name="ClickTick" type="AudioStreamPlayer" parent="OptionsMenuControl/SFX"]

[node name="WindowSizeConnector" type="Node" parent="." node_paths=PackedStringArray("target_nodes")]
script = ExtResource("2_ffg2c")
target_nodes = [NodePath("../Control")]

[node name="Control" type="Control" parent="."]
layout_mode = 3
anchors_preset = 0
offset_right = 1152.0
offset_bottom = 648.0

[node name="Background" type="TextureRect" parent="Control" node_paths=PackedStringArray("menu_container")]
layout_mode = 1
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2
script = SubResource("GDScript_55485")
menu_container = NodePath("../..")

[node name="BackDrop" type="ColorRect" parent="Control"]
layout_mode = 1
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2
mouse_filter = 1
color = Color(0, 0, 0, 0.490196)

[node name="MarginContainer" type="MarginContainer" parent="Control"]
layout_mode = 1
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2
theme_override_constants/margin_left = 100
theme_override_constants/margin_top = 130
theme_override_constants/margin_right = 100
theme_override_constants/margin_bottom = 100

[node name="VideoOptions" type="BoxContainer" parent="Control/MarginContainer"]
layout_mode = 2
alignment = 1
vertical = true

[node name="GridContainer" type="GridContainer" parent="Control/MarginContainer/VideoOptions"]
layout_mode = 2
size_flags_horizontal = 4
theme_override_constants/h_separation = 230
theme_override_constants/v_separation = 30
columns = 2

[node name="Label" type="Label" parent="Control/MarginContainer/VideoOptions/GridContainer"]
layout_mode = 2
size_flags_vertical = 3
text = "Display Mode"
vertical_alignment = 1

[node name="DisplayModeMenuButton" type="MenuButton" parent="Control/MarginContainer/VideoOptions/GridContainer"]
layout_mode = 2
size_flags_horizontal = 0
text = "Exclusive Fullscreen"
item_count = 3
popup/item_0/text = "Windowed"
popup/item_1/text = "Fullscreen"
popup/item_1/id = 3
popup/item_2/text = "Exclusive Fullscreen"
popup/item_2/checked = true
popup/item_2/id = 4
script = SubResource("GDScript_l8cix")

[node name="Label2" type="Label" parent="Control/MarginContainer/VideoOptions/GridContainer"]
layout_mode = 2
text = "Monitor"

[node name="ScreenMenuButton" type="MenuButton" parent="Control/MarginContainer/VideoOptions/GridContainer"]
layout_mode = 2
size_flags_horizontal = 0
script = SubResource("GDScript_61kd7")

[node name="Label3" type="Label" parent="Control/MarginContainer/VideoOptions/GridContainer"]
layout_mode = 2
text = "FPS Limit"

[node name="FPSLimitMenuButton" type="MenuButton" parent="Control/MarginContainer/VideoOptions/GridContainer"]
layout_mode = 2
item_count = 7
popup/item_0/text = "No Limit"
popup/item_1/text = "25"
popup/item_1/id = 1
popup/item_2/text = "30"
popup/item_2/id = 2
popup/item_3/text = "60"
popup/item_3/id = 3
popup/item_4/text = "144"
popup/item_4/id = 4
popup/item_5/text = "240"
popup/item_5/id = 5
popup/item_6/text = "360"
popup/item_6/id = 6
script = SubResource("GDScript_h7hm4")

[node name="Label4" type="Label" parent="Control/MarginContainer/VideoOptions/GridContainer"]
layout_mode = 2
text = "Vertical Sync"

[node name="VSyncCheckButton" type="CheckButton" parent="Control/MarginContainer/VideoOptions/GridContainer"]
layout_mode = 2
size_flags_horizontal = 0
script = SubResource("GDScript_f8lsk")

[node name="Label5" type="Label" parent="Control/MarginContainer/VideoOptions/GridContainer"]
layout_mode = 2
text = "Anti-Aliasing (MSAA)"

[node name="MSAAMenuButton" type="MenuButton" parent="Control/MarginContainer/VideoOptions/GridContainer"]
layout_mode = 2
size_flags_horizontal = 0
item_count = 4
popup/item_0/text = "Disabled"
popup/item_1/text = "2x"
popup/item_1/id = 1
popup/item_2/text = "4x"
popup/item_2/id = 2
popup/item_3/text = "8x"
popup/item_3/id = 3
script = SubResource("GDScript_knrud")

[node name="Label6" type="Label" parent="Control/MarginContainer/VideoOptions/GridContainer"]
layout_mode = 2
text = "Brightness"

[node name="BrightnessHSlider" type="HSlider" parent="Control/MarginContainer/VideoOptions/GridContainer"]
layout_mode = 2
max_value = 8.0
step = 0.1
value = 1.0
script = SubResource("GDScript_j2ipi")

[node name="Label7" type="Label" parent="Control/MarginContainer/VideoOptions/GridContainer"]
layout_mode = 2
text = "Contrast"

[node name="AudioOptions" type="BoxContainer" parent="Control/MarginContainer"]
visible = false
layout_mode = 2
alignment = 1
vertical = true

[node name="GridContainer" type="GridContainer" parent="Control/MarginContainer/AudioOptions"]
layout_mode = 2
theme_override_constants/h_separation = 230
theme_override_constants/v_separation = 30
columns = 2

[node name="SliderLabel" type="Label" parent="Control/MarginContainer/AudioOptions/GridContainer"]
layout_mode = 2
text = "Master Volume"

[node name="HSlider" type="HSlider" parent="Control/MarginContainer/AudioOptions/GridContainer"]
layout_mode = 2
size_flags_horizontal = 3
size_flags_vertical = 1
value = 90.0
script = SubResource("GDScript_2332y")

[node name="SliderLabel2" type="Label" parent="Control/MarginContainer/AudioOptions/GridContainer"]
layout_mode = 2
text = "Music Volume"

[node name="HSlider2" type="HSlider" parent="Control/MarginContainer/AudioOptions/GridContainer"]
layout_mode = 2
size_flags_horizontal = 3
size_flags_vertical = 1
value = 90.0
script = SubResource("GDScript_ninhr")

[node name="SliderLabel3" type="Label" parent="Control/MarginContainer/AudioOptions/GridContainer"]
layout_mode = 2
text = "SFX Volume"

[node name="HSlider3" type="HSlider" parent="Control/MarginContainer/AudioOptions/GridContainer"]
layout_mode = 2
size_flags_horizontal = 3
size_flags_vertical = 1
value = 90.0
script = SubResource("GDScript_bjj28")

[node name="HBoxContainer" type="HBoxContainer" parent="Control/MarginContainer/AudioOptions/GridContainer"]
layout_mode = 2
alignment = 1

[node name="RevertButton" type="Button" parent="Control/MarginContainer/AudioOptions/GridContainer/HBoxContainer" node_paths=PackedStringArray("nodes")]
layout_mode = 2
text = "Restore Defaults"
script = SubResource("GDScript_tnn2v")
nodes = [NodePath("../../HSlider"), NodePath("../../HSlider2"), NodePath("../../HSlider3")]

[node name="InputOptions" type="BoxContainer" parent="Control/MarginContainer"]
visible = false
layout_mode = 2
size_flags_vertical = 3
size_flags_stretch_ratio = 0.0
theme_override_constants/separation = 15
alignment = 1
vertical = true

[node name="HBoxContainer" type="HBoxContainer" parent="Control/MarginContainer/InputOptions"]
layout_mode = 2
theme_override_constants/separation = 22
alignment = 1

[node name="Label" type="Label" parent="Control/MarginContainer/InputOptions/HBoxContainer"]
layout_mode = 2
text = "Mouse Sensitivity"

[node name="MouseHSlider" type="HSlider" parent="Control/MarginContainer/InputOptions/HBoxContainer"]
layout_mode = 2
size_flags_horizontal = 3
size_flags_vertical = 1
max_value = 0.5
step = 0.025
value = 0.1
script = SubResource("GDScript_iaxat")

[node name="ResetSettings" type="Button" parent="Control/MarginContainer/InputOptions/HBoxContainer"]
layout_mode = 2
text = "Reset to default"

[node name="ScrollContainer" type="ScrollContainer" parent="Control/MarginContainer/InputOptions"]
layout_mode = 2
size_flags_vertical = 3

[node name="GridContainer" type="GridContainer" parent="Control/MarginContainer/InputOptions/ScrollContainer" node_paths=PackedStringArray("reset_btn")]
layout_mode = 2
theme_override_constants/h_separation = 30
columns = 3
script = SubResource("GDScript_ljq8r")
reset_btn = NodePath("../../HBoxContainer/ResetSettings")
ignored_actions = Array[String](["escape", "sprint"])

[node name="Label" type="Label" parent="Control/MarginContainer/InputOptions/ScrollContainer/GridContainer"]
layout_mode = 2
text = "Action"

[node name="Label2" type="Label" parent="Control/MarginContainer/InputOptions/ScrollContainer/GridContainer"]
layout_mode = 2
text = "Keyboard"

[node name="Label3" type="Label" parent="Control/MarginContainer/InputOptions/ScrollContainer/GridContainer"]
layout_mode = 2
text = "Controller"

[node name="GameOptions" type="BoxContainer" parent="Control/MarginContainer"]
visible = false
layout_mode = 2

[node name="CloseButton" type="Button" parent="Control"]
layout_mode = 1
anchors_preset = 2
anchor_top = 1.0
anchor_bottom = 1.0
offset_left = 41.0
offset_top = -103.0
offset_right = 141.0
offset_bottom = -41.0
grow_vertical = 0
theme_override_colors/font_outline_color = Color(0, 0, 0, 1)
theme_override_constants/outline_size = 5
theme_override_font_sizes/font_size = 28
theme_override_styles/hover = SubResource("StyleBoxFlat_f47jc")
theme_override_styles/pressed = SubResource("StyleBoxFlat_f6rt3")
theme_override_styles/normal = SubResource("StyleBoxFlat_w0kid")
text = "Back"
script = SubResource("GDScript_yprk4")

[node name="TabsContainer" type="HBoxContainer" parent="Control" node_paths=PackedStringArray("menus")]
layout_mode = 1
anchors_preset = 10
anchor_right = 1.0
offset_bottom = 85.0
grow_horizontal = 2
theme_override_constants/separation = 0
alignment = 1
script = SubResource("GDScript_vqvxb")
menus = [NodePath("../MarginContainer/VideoOptions"), NodePath("../MarginContainer/AudioOptions"), NodePath("../MarginContainer/InputOptions"), NodePath("../MarginContainer/GameOptions")]

[node name="Video" type="Button" parent="Control/TabsContainer"]
layout_mode = 2
size_flags_horizontal = 3
theme_override_colors/font_outline_color = Color(0, 0, 0, 1)
theme_override_constants/outline_size = 5
theme_override_font_sizes/font_size = 40
theme_override_styles/focus = SubResource("StyleBoxFlat_bw13l")
theme_override_styles/hover = SubResource("StyleBoxFlat_sp650")
theme_override_styles/pressed = SubResource("StyleBoxFlat_bw13l")
theme_override_styles/normal = SubResource("StyleBoxFlat_x6qco")
text = "Video"

[node name="Audio" type="Button" parent="Control/TabsContainer"]
layout_mode = 2
size_flags_horizontal = 3
theme_override_colors/font_outline_color = Color(0, 0, 0, 1)
theme_override_constants/outline_size = 5
theme_override_font_sizes/font_size = 40
theme_override_styles/focus = SubResource("StyleBoxFlat_bw13l")
theme_override_styles/hover = SubResource("StyleBoxFlat_sp650")
theme_override_styles/pressed = SubResource("StyleBoxFlat_bw13l")
theme_override_styles/normal = SubResource("StyleBoxFlat_x6qco")
text = "Audio
"

[node name="Controls" type="Button" parent="Control/TabsContainer"]
layout_mode = 2
size_flags_horizontal = 3
theme_override_colors/font_outline_color = Color(0, 0, 0, 1)
theme_override_constants/outline_size = 5
theme_override_font_sizes/font_size = 40
theme_override_styles/focus = SubResource("StyleBoxFlat_bw13l")
theme_override_styles/hover = SubResource("StyleBoxFlat_sp650")
theme_override_styles/pressed = SubResource("StyleBoxFlat_bw13l")
theme_override_styles/normal = SubResource("StyleBoxFlat_x6qco")
text = "Controls"

[node name="Game" type="Button" parent="Control/TabsContainer"]
layout_mode = 2
size_flags_horizontal = 3
theme_override_colors/font_outline_color = Color(0, 0, 0, 1)
theme_override_constants/outline_size = 5
theme_override_font_sizes/font_size = 40
theme_override_styles/focus = SubResource("StyleBoxFlat_bw13l")
theme_override_styles/hover = SubResource("StyleBoxFlat_sp650")
theme_override_styles/pressed = SubResource("StyleBoxFlat_bw13l")
theme_override_styles/normal = SubResource("StyleBoxFlat_x6qco")
text = "Game"

[node name="InputEntryPanel" type="Panel" parent="Control"]
unique_name_in_owner = true
visible = false
layout_mode = 1
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2

[node name="Label" type="Label" parent="Control/InputEntryPanel"]
layout_mode = 1
anchors_preset = 8
anchor_left = 0.5
anchor_top = 0.5
anchor_right = 0.5
anchor_bottom = 0.5
offset_left = -60.5
offset_top = -13.0
offset_right = 60.5
offset_bottom = 13.0
grow_horizontal = 2
grow_vertical = 2
text = "Press Any Key..."

[connection signal="mouse_entered" from="Control/MarginContainer/VideoOptions/GridContainer/DisplayModeMenuButton" to="Control/MarginContainer/VideoOptions/GridContainer/DisplayModeMenuButton" method="_on_mouse_entered"]
[connection signal="mouse_entered" from="Control/MarginContainer/VideoOptions/GridContainer/ScreenMenuButton" to="Control/MarginContainer/VideoOptions/GridContainer/ScreenMenuButton" method="_on_mouse_entered"]
[connection signal="mouse_entered" from="Control/MarginContainer/VideoOptions/GridContainer/FPSLimitMenuButton" to="Control/MarginContainer/VideoOptions/GridContainer/FPSLimitMenuButton" method="_on_mouse_entered"]
[connection signal="mouse_entered" from="Control/MarginContainer/VideoOptions/GridContainer/VSyncCheckButton" to="Control/MarginContainer/VideoOptions/GridContainer/VSyncCheckButton" method="_on_mouse_entered"]
[connection signal="pressed" from="Control/MarginContainer/VideoOptions/GridContainer/VSyncCheckButton" to="Control/MarginContainer/VideoOptions/GridContainer/VSyncCheckButton" method="_on_pressed"]
[connection signal="mouse_entered" from="Control/MarginContainer/VideoOptions/GridContainer/MSAAMenuButton" to="Control/MarginContainer/VideoOptions/GridContainer/MSAAMenuButton" method="_on_mouse_entered"]
[connection signal="value_changed" from="Control/MarginContainer/VideoOptions/GridContainer/BrightnessHSlider" to="Control/MarginContainer/VideoOptions/GridContainer/BrightnessHSlider" method="_on_value_changed"]
[connection signal="value_changed" from="Control/MarginContainer/AudioOptions/GridContainer/HSlider" to="Control/MarginContainer/AudioOptions/GridContainer/HSlider" method="_on_value_changed"]
[connection signal="value_changed" from="Control/MarginContainer/AudioOptions/GridContainer/HSlider2" to="Control/MarginContainer/AudioOptions/GridContainer/HSlider2" method="_on_value_changed"]
[connection signal="value_changed" from="Control/MarginContainer/AudioOptions/GridContainer/HSlider3" to="Control/MarginContainer/AudioOptions/GridContainer/HSlider3" method="_on_value_changed"]
[connection signal="mouse_entered" from="Control/MarginContainer/AudioOptions/GridContainer/HBoxContainer/RevertButton" to="Control/MarginContainer/AudioOptions/GridContainer/HBoxContainer/RevertButton" method="_on_mouse_entered"]
[connection signal="pressed" from="Control/MarginContainer/AudioOptions/GridContainer/HBoxContainer/RevertButton" to="Control/MarginContainer/AudioOptions/GridContainer/HBoxContainer/RevertButton" method="_on_pressed"]
[connection signal="value_changed" from="Control/MarginContainer/InputOptions/HBoxContainer/MouseHSlider" to="Control/MarginContainer/InputOptions/HBoxContainer/MouseHSlider" method="_on_value_changed"]
[connection signal="mouse_entered" from="Control/TabsContainer/Video" to="Control/TabsContainer" method="_on_mouse_entered"]
[connection signal="pressed" from="Control/TabsContainer/Video" to="Control/TabsContainer" method="_on_video_pressed"]
[connection signal="mouse_entered" from="Control/TabsContainer/Audio" to="Control/TabsContainer" method="_on_mouse_entered"]
[connection signal="pressed" from="Control/TabsContainer/Audio" to="Control/TabsContainer" method="_on_audio_pressed"]
[connection signal="mouse_entered" from="Control/TabsContainer/Controls" to="Control/TabsContainer" method="_on_mouse_entered"]
[connection signal="pressed" from="Control/TabsContainer/Controls" to="Control/TabsContainer" method="_on_controls_pressed"]
[connection signal="mouse_entered" from="Control/TabsContainer/Game" to="Control/TabsContainer" method="_on_mouse_entered"]
[connection signal="pressed" from="Control/TabsContainer/Game" to="Control/TabsContainer" method="_on_game_pressed"]
