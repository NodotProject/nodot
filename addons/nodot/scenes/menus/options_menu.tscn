[gd_scene load_steps=20 format=3 uid="uid://dj1v33w5ffysa"]

[ext_resource type="Script" path="res://addons/nodot/menus/MenuContainer.gd" id="1_0h6t2"]
[ext_resource type="Script" path="res://addons/nodot/utility/WindowSizeConnector.gd" id="2_ffg2c"]
[ext_resource type="Script" path="res://addons/nodot/utility/SignalConnector.gd" id="3_nn3pg"]

[sub_resource type="GDScript" id="GDScript_p2nii"]
resource_name = "optionsmenucontrol"
script/source = "extends Node

@onready var menu_manager: MenuManager = get_parent().get_parent()

"

[sub_resource type="GDScript" id="GDScript_kbupf"]
resource_name = "optiontabs"
script/source = "extends TabBar

@export var tab_contents: Array[VBoxContainer] = []

func _ready():
	hide_contents()
	tab_contents[0].visible = true

func _on_tab_selected(tab_index: int):
	hide_contents()
	tab_contents[tab_index].visible = true

func hide_contents():
	for tab in tab_contents:
		tab.visible = false
"

[sub_resource type="GDScript" id="GDScript_yprk4"]
resource_name = "closebtn"
script/source = "extends Button

@onready var menu_manager: MenuManager = %OptionsMenuControl.menu_manager

func _on_pressed():
	AudioManager.save_config()
	VideoManager.save_config()
	InputManager.save_config()
	menu_manager.go_back()
"

[sub_resource type="GDScript" id="GDScript_l8cix"]
resource_name = "displaymode"
script/source = "extends MenuButton

@onready var popup = get_popup()

const display_mode_names = [\"Windowed\", \"x\", \"x\", \"Fullscreen\", \"Exclusive Fullscreen\"]

func _ready():
	popup.connect(\"id_pressed\", _on_pressed)
	update_text()
	
func _on_pressed(item_id: int):
	VideoManager.display_mode = item_id
	update_text()
			
func update_text():
	text = display_mode_names[VideoManager.display_mode]
"

[sub_resource type="GDScript" id="GDScript_61kd7"]
resource_name = "screenselect"
script/source = "extends MenuButton

@onready var popup = get_popup()

func _ready():
	popup.connect(\"id_pressed\", _on_pressed)
	for i in VideoManager.get_screen_count():
		popup.add_item(str(i), i)
	update_text()
	
func _on_pressed(item_id: int):
	VideoManager.screen = item_id
	update_text()
			
func update_text():
	text = str(VideoManager.screen)
"

[sub_resource type="GDScript" id="GDScript_g05di"]
resource_name = "fpslimit"
script/source = "extends TextEdit


# Called when the node enters the scene tree for the first time.
func _ready():
	pass # Replace with function body.


# Called every frame. 'delta' is the elapsed time since the previous frame.
func _process(delta):
	pass


func _on_text_changed():
	var regex = RegEx.new()
	regex.compile(\"[0-9]\")
	
	var matches = regex.search_all(text)
	var new_text: String = \"\"
	if matches:
		for r_match in matches:
			new_text += r_match.get_string()
	text = new_text
	set_caret_column(text.length())
	if text != \"\":
		var fps_limit = int(text)
		VideoManager.fps_limit = fps_limit
	
"

[sub_resource type="GDScript" id="GDScript_f8lsk"]
resource_name = "vsync"
script/source = "extends CheckButton

func _ready():
	button_pressed = VideoManager.vsync

func _on_pressed():
	VideoManager.vsync = button_pressed
"

[sub_resource type="GDScript" id="GDScript_knrud"]
resource_name = "msaabtn"
script/source = "extends MenuButton

@onready var popup = get_popup()

func _ready():
	popup.connect(\"id_pressed\", _on_pressed)
	update_text()
	
func _on_pressed(item_id: int):
	match item_id:
		0: VideoManager.msaa = Viewport.MSAA_DISABLED
		1: VideoManager.msaa = Viewport.MSAA_2X
		2: VideoManager.msaa = Viewport.MSAA_4X
		3: VideoManager.msaa = Viewport.MSAA_8X
	update_text()
			
func update_text():
	text = popup.get_item_text(VideoManager.msaa)
"

[sub_resource type="GDScript" id="GDScript_j2ipi"]
resource_name = "brightness"
script/source = "extends HSlider

func _on_value_changed(value):
	VideoManager.brightness = value
"

[sub_resource type="GDScript" id="GDScript_kevlo"]
resource_name = "contrast"
script/source = "extends HSlider

func _on_value_changed(value):
	VideoManager.contrast = value
"

[sub_resource type="GDScript" id="GDScript_2332y"]
resource_name = "masterslider"
script/source = "extends HSlider

func _ready():
	var converted_volume = AudioManager._convert_volume(AudioManager.master_volume)
	value = converted_volume * 100
	
func _on_value_changed(value):
	AudioManager.set_master_volume_decimal(value / 100)
"

[sub_resource type="GDScript" id="GDScript_ninhr"]
resource_name = "music_slider"
script/source = "extends HSlider

func _ready():
	var converted_volume = AudioManager._convert_volume(AudioManager.music_volume)
	value = converted_volume * 100
	
func _on_value_changed(value):
	AudioManager.set_music_volume_decimal(value / 100)
"

[sub_resource type="GDScript" id="GDScript_bjj28"]
resource_name = "sfxslider"
script/source = "extends HSlider

func _ready():
	var converted_volume = AudioManager._convert_volume(AudioManager.sfx_volume)
	value = converted_volume * 100
	
func _on_value_changed(value):
	AudioManager.set_sfx_volume_decimal(value / 100)
"

[sub_resource type="GDScript" id="GDScript_tnn2v"]
resource_name = "revertbtn"
script/source = "extends Button

@export var nodes: Array[Node] = []

var default_values: Dictionary = {
	\"HSlider\": 95,
	\"HSlider2\": 95,
	\"HSlider3\": 95
}

func revert():
	for node in nodes:
		if \"value\" in node:
			node.value = default_values[node.name]

func _on_pressed():
	revert()
"

[sub_resource type="GDScript" id="GDScript_iaxat"]
resource_name = "mouse_sensitivity"
script/source = "extends HSlider

func _ready():
	value = InputManager.mouse_sensitivity
	
func _on_value_changed(value):
	InputManager.mouse_sensitivity = value
"

[sub_resource type="GDScript" id="GDScript_ljq8r"]
resource_name = "keybindings"
script/source = "extends GridContainer

var target_action_name: String = \"\"
var target_key_name: String = \"\"
var target_button: Button

func _ready():
	%InputEntryPanel.visible = false
	for action in InputMap.get_actions():
		if !action.begins_with(\"ui_\") and action != \"escape\":
			var action_label: Label = Label.new()
			var action_title = action.replace(\"_\", \" \")
			action_title = action_title[0].to_upper() + action_title.substr(1, -1)
			action_label.text = action_title
			action_label.tooltip_text = action
			add_child(action_label)
			
			var input_button: Button = Button.new()
			input_button.flat = true
			input_button.alignment = HORIZONTAL_ALIGNMENT_LEFT
			input_button.focus_mode = Control.FOCUS_NONE
			input_button.text = InputManager.get_action_key(action)
			input_button.connect(\"pressed\", _input_button_clicked.bind(action, input_button))
			add_child(input_button)

			var c_input_label: Label = Label.new()
			add_child(c_input_label)
			
func _input(event: InputEvent):
	if target_action_name != \"\":
		if event is InputEventMouseMotion:
			return
		
		InputManager.remove_action(target_action_name, target_key_name)
		if event is InputEventKey:
			InputManager.add_action(target_action_name, event.keycode, 0)
		if event is InputEventMouseButton:
			InputManager.add_action(target_action_name, event.button_index, 1)
		if event is InputEventJoypadButton:
			InputManager.add_action(target_action_name, event.button_index, 2)
			
		target_button.text = InputManager.get_action_key(target_action_name)
		
		target_action_name = \"\"
		target_key_name = \"\"
		%InputEntryPanel.visible = false
		

func _input_button_clicked(action_name: String, button: Button):
	target_action_name = action_name
	target_key_name = button.text
	target_button = button
	%InputEntryPanel.visible = true
"

[node name="OptionsMenuContainer" type="Node2D"]
process_mode = 3
script = ExtResource("1_0h6t2")

[node name="OptionsMenuControl" type="Node" parent="."]
unique_name_in_owner = true
script = SubResource("GDScript_p2nii")

[node name="BGM" type="Node" parent="OptionsMenuControl"]

[node name="AudioStreamPlayer" type="AudioStreamPlayer" parent="OptionsMenuControl/BGM"]

[node name="MusicStartSignalConnector" type="Node" parent="OptionsMenuControl/BGM" node_paths=PackedStringArray("trigger_node", "target_node")]
script = ExtResource("3_nn3pg")
trigger_node = NodePath("../../..")
target_node = NodePath("../AudioStreamPlayer")
trigger_signal = "showing"
target_method = "play"

[node name="MusicStopSignalConnector" type="Node" parent="OptionsMenuControl/BGM" node_paths=PackedStringArray("trigger_node", "target_node")]
script = ExtResource("3_nn3pg")
trigger_node = NodePath("../../..")
target_node = NodePath("../AudioStreamPlayer")
trigger_signal = "hiding"
target_method = "stop"

[node name="BackDrop" type="ColorRect" parent="."]
grow_horizontal = 2
grow_vertical = 2
mouse_filter = 1
color = Color(0, 0, 0, 0.984314)

[node name="Control" type="Control" parent="."]
layout_mode = 3
anchors_preset = 0
offset_right = 1152.0
offset_bottom = 648.0

[node name="WindowSizeConnector" type="Node" parent="Control" node_paths=PackedStringArray("target_nodes")]
script = ExtResource("2_ffg2c")
target_nodes = [NodePath("../../BackDrop"), NodePath(".."), NodePath("../MarginContainer")]

[node name="MarginContainer" type="MarginContainer" parent="Control"]
layout_mode = 1
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2
theme_override_constants/margin_left = 30
theme_override_constants/margin_top = 30
theme_override_constants/margin_right = 30
theme_override_constants/margin_bottom = 30

[node name="VBoxContainer" type="VBoxContainer" parent="Control/MarginContainer"]
layout_mode = 2

[node name="HBoxContainer" type="HBoxContainer" parent="Control/MarginContainer/VBoxContainer"]
layout_mode = 2

[node name="TabBar" type="TabBar" parent="Control/MarginContainer/VBoxContainer/HBoxContainer" node_paths=PackedStringArray("tab_contents")]
layout_mode = 2
size_flags_horizontal = 3
tab_count = 3
tab_0/title = "Video"
tab_1/title = "Audio"
tab_2/title = "Controls"
script = SubResource("GDScript_kbupf")
tab_contents = [NodePath("../../VideoOptions"), NodePath("../../AudioOptions"), NodePath("../../InputOptions")]

[node name="CloseButton" type="Button" parent="Control/MarginContainer/VBoxContainer/HBoxContainer"]
layout_mode = 2
text = "Close"
script = SubResource("GDScript_yprk4")

[node name="VideoOptions" type="VBoxContainer" parent="Control/MarginContainer/VBoxContainer"]
layout_mode = 2

[node name="GridContainer" type="GridContainer" parent="Control/MarginContainer/VBoxContainer/VideoOptions"]
layout_mode = 2
theme_override_constants/h_separation = 30
theme_override_constants/v_separation = 15
columns = 2

[node name="Label" type="Label" parent="Control/MarginContainer/VBoxContainer/VideoOptions/GridContainer"]
layout_mode = 2
size_flags_vertical = 3
text = "Display Mode"
vertical_alignment = 1

[node name="DisplayModeMenuButton" type="MenuButton" parent="Control/MarginContainer/VBoxContainer/VideoOptions/GridContainer"]
layout_mode = 2
size_flags_horizontal = 0
text = "Exclusive Fullscreen"
item_count = 3
popup/item_0/text = "Windowed"
popup/item_0/id = 0
popup/item_1/text = "Fullscreen"
popup/item_1/id = 3
popup/item_2/text = "Exclusive Fullscreen"
popup/item_2/checked = true
popup/item_2/id = 4
script = SubResource("GDScript_l8cix")

[node name="Label2" type="Label" parent="Control/MarginContainer/VBoxContainer/VideoOptions/GridContainer"]
layout_mode = 2
text = "Monitor"

[node name="ScreenMenuButton" type="MenuButton" parent="Control/MarginContainer/VBoxContainer/VideoOptions/GridContainer"]
layout_mode = 2
size_flags_horizontal = 0
script = SubResource("GDScript_61kd7")

[node name="Label3" type="Label" parent="Control/MarginContainer/VBoxContainer/VideoOptions/GridContainer"]
layout_mode = 2
text = "FPS Limit"

[node name="FPSLimitTextInput" type="TextEdit" parent="Control/MarginContainer/VBoxContainer/VideoOptions/GridContainer"]
layout_mode = 2
text = "0"
scroll_fit_content_height = true
script = SubResource("GDScript_g05di")

[node name="Label4" type="Label" parent="Control/MarginContainer/VBoxContainer/VideoOptions/GridContainer"]
layout_mode = 2
text = "Vertical Sync"

[node name="VSyncCheckButton" type="CheckButton" parent="Control/MarginContainer/VBoxContainer/VideoOptions/GridContainer"]
layout_mode = 2
size_flags_horizontal = 0
script = SubResource("GDScript_f8lsk")

[node name="Label5" type="Label" parent="Control/MarginContainer/VBoxContainer/VideoOptions/GridContainer"]
layout_mode = 2
text = "Anti-Aliasing (MSAA)"

[node name="MSAAMenuButton" type="MenuButton" parent="Control/MarginContainer/VBoxContainer/VideoOptions/GridContainer"]
layout_mode = 2
size_flags_horizontal = 0
item_count = 4
popup/item_0/text = "Disabled"
popup/item_0/id = 0
popup/item_1/text = "2x"
popup/item_1/id = 1
popup/item_2/text = "4x"
popup/item_2/id = 2
popup/item_3/text = "8x"
popup/item_3/id = 3
script = SubResource("GDScript_knrud")

[node name="Label6" type="Label" parent="Control/MarginContainer/VBoxContainer/VideoOptions/GridContainer"]
layout_mode = 2
text = "Brightness"

[node name="BrightnessHSlider" type="HSlider" parent="Control/MarginContainer/VBoxContainer/VideoOptions/GridContainer"]
layout_mode = 2
max_value = 8.0
step = 0.1
value = 1.0
script = SubResource("GDScript_j2ipi")

[node name="Label7" type="Label" parent="Control/MarginContainer/VBoxContainer/VideoOptions/GridContainer"]
layout_mode = 2
text = "Contrast"

[node name="ContrastHSlider" type="HSlider" parent="Control/MarginContainer/VBoxContainer/VideoOptions/GridContainer"]
layout_mode = 2
max_value = 8.0
step = 0.1
value = 1.0
script = SubResource("GDScript_kevlo")

[node name="AudioOptions" type="VBoxContainer" parent="Control/MarginContainer/VBoxContainer"]
visible = false
layout_mode = 2

[node name="GridContainer" type="GridContainer" parent="Control/MarginContainer/VBoxContainer/AudioOptions"]
layout_mode = 2
theme_override_constants/h_separation = 30
theme_override_constants/v_separation = 15
columns = 2

[node name="SliderLabel" type="Label" parent="Control/MarginContainer/VBoxContainer/AudioOptions/GridContainer"]
layout_mode = 2
text = "Master Volume"

[node name="HSlider" type="HSlider" parent="Control/MarginContainer/VBoxContainer/AudioOptions/GridContainer"]
layout_mode = 2
size_flags_horizontal = 3
size_flags_vertical = 1
value = 95.0
script = SubResource("GDScript_2332y")

[node name="SliderLabel2" type="Label" parent="Control/MarginContainer/VBoxContainer/AudioOptions/GridContainer"]
layout_mode = 2
text = "Music Volume"

[node name="HSlider2" type="HSlider" parent="Control/MarginContainer/VBoxContainer/AudioOptions/GridContainer"]
layout_mode = 2
size_flags_horizontal = 3
size_flags_vertical = 1
value = 95.0
script = SubResource("GDScript_ninhr")

[node name="SliderLabel3" type="Label" parent="Control/MarginContainer/VBoxContainer/AudioOptions/GridContainer"]
layout_mode = 2
text = "SFX Volume"

[node name="HSlider3" type="HSlider" parent="Control/MarginContainer/VBoxContainer/AudioOptions/GridContainer"]
layout_mode = 2
size_flags_horizontal = 3
size_flags_vertical = 1
value = 95.0
script = SubResource("GDScript_bjj28")

[node name="HBoxContainer" type="HBoxContainer" parent="Control/MarginContainer/VBoxContainer/AudioOptions"]
layout_mode = 2
alignment = 2

[node name="RevertButton" type="Button" parent="Control/MarginContainer/VBoxContainer/AudioOptions/HBoxContainer" node_paths=PackedStringArray("nodes")]
layout_mode = 2
text = "Restore Defaults"
script = SubResource("GDScript_tnn2v")
nodes = [NodePath("../../GridContainer/HSlider"), NodePath("../../GridContainer/HSlider2"), NodePath("../../GridContainer/HSlider3")]

[node name="InputOptions" type="VBoxContainer" parent="Control/MarginContainer/VBoxContainer"]
visible = false
layout_mode = 2
size_flags_vertical = 3
theme_override_constants/separation = 15

[node name="HBoxContainer" type="HBoxContainer" parent="Control/MarginContainer/VBoxContainer/InputOptions"]
layout_mode = 2
theme_override_constants/separation = 22
alignment = 1

[node name="Label" type="Label" parent="Control/MarginContainer/VBoxContainer/InputOptions/HBoxContainer"]
layout_mode = 2
text = "Mouse Sensitivity"

[node name="MouseHSlider" type="HSlider" parent="Control/MarginContainer/VBoxContainer/InputOptions/HBoxContainer"]
layout_mode = 2
size_flags_horizontal = 3
size_flags_vertical = 1
max_value = 1.0
step = 0.05
value = 0.5
script = SubResource("GDScript_iaxat")

[node name="ScrollContainer" type="ScrollContainer" parent="Control/MarginContainer/VBoxContainer/InputOptions"]
layout_mode = 2
size_flags_vertical = 3

[node name="GridContainer" type="GridContainer" parent="Control/MarginContainer/VBoxContainer/InputOptions/ScrollContainer"]
layout_mode = 2
theme_override_constants/h_separation = 30
columns = 3
script = SubResource("GDScript_ljq8r")

[node name="Label" type="Label" parent="Control/MarginContainer/VBoxContainer/InputOptions/ScrollContainer/GridContainer"]
layout_mode = 2
text = "Action"

[node name="Label2" type="Label" parent="Control/MarginContainer/VBoxContainer/InputOptions/ScrollContainer/GridContainer"]
layout_mode = 2
text = "Keyboard"

[node name="Label3" type="Label" parent="Control/MarginContainer/VBoxContainer/InputOptions/ScrollContainer/GridContainer"]
layout_mode = 2
text = "Controller"

[node name="InputEntryPanel" type="Panel" parent="Control"]
unique_name_in_owner = true
layout_mode = 1
anchors_preset = 8
anchor_left = 0.5
anchor_top = 0.5
anchor_right = 0.5
anchor_bottom = 0.5
offset_left = -100.0
offset_top = -100.0
offset_right = 100.0
offset_bottom = 100.0
grow_horizontal = 2
grow_vertical = 2

[node name="Label" type="Label" parent="Control/InputEntryPanel"]
layout_mode = 1
anchors_preset = 8
anchor_left = 0.5
anchor_top = 0.5
anchor_right = 0.5
anchor_bottom = 0.5
offset_left = -60.5
offset_top = -13.0
offset_right = 60.5
offset_bottom = 13.0
grow_horizontal = 2
grow_vertical = 2
text = "Press Any Key..."

[connection signal="tab_selected" from="Control/MarginContainer/VBoxContainer/HBoxContainer/TabBar" to="Control/MarginContainer/VBoxContainer/HBoxContainer/TabBar" method="_on_tab_selected"]
[connection signal="pressed" from="Control/MarginContainer/VBoxContainer/HBoxContainer/CloseButton" to="Control/MarginContainer/VBoxContainer/HBoxContainer/CloseButton" method="_on_pressed"]
[connection signal="text_changed" from="Control/MarginContainer/VBoxContainer/VideoOptions/GridContainer/FPSLimitTextInput" to="Control/MarginContainer/VBoxContainer/VideoOptions/GridContainer/FPSLimitTextInput" method="_on_text_changed"]
[connection signal="pressed" from="Control/MarginContainer/VBoxContainer/VideoOptions/GridContainer/VSyncCheckButton" to="Control/MarginContainer/VBoxContainer/VideoOptions/GridContainer/VSyncCheckButton" method="_on_pressed"]
[connection signal="value_changed" from="Control/MarginContainer/VBoxContainer/VideoOptions/GridContainer/BrightnessHSlider" to="Control/MarginContainer/VBoxContainer/VideoOptions/GridContainer/BrightnessHSlider" method="_on_value_changed"]
[connection signal="value_changed" from="Control/MarginContainer/VBoxContainer/VideoOptions/GridContainer/ContrastHSlider" to="Control/MarginContainer/VBoxContainer/VideoOptions/GridContainer/ContrastHSlider" method="_on_value_changed"]
[connection signal="value_changed" from="Control/MarginContainer/VBoxContainer/AudioOptions/GridContainer/HSlider" to="Control/MarginContainer/VBoxContainer/AudioOptions/GridContainer/HSlider" method="_on_value_changed"]
[connection signal="value_changed" from="Control/MarginContainer/VBoxContainer/AudioOptions/GridContainer/HSlider2" to="Control/MarginContainer/VBoxContainer/AudioOptions/GridContainer/HSlider2" method="_on_value_changed"]
[connection signal="value_changed" from="Control/MarginContainer/VBoxContainer/AudioOptions/GridContainer/HSlider3" to="Control/MarginContainer/VBoxContainer/AudioOptions/GridContainer/HSlider3" method="_on_value_changed"]
[connection signal="pressed" from="Control/MarginContainer/VBoxContainer/AudioOptions/HBoxContainer/RevertButton" to="Control/MarginContainer/VBoxContainer/AudioOptions/HBoxContainer/RevertButton" method="_on_pressed"]
[connection signal="value_changed" from="Control/MarginContainer/VBoxContainer/InputOptions/HBoxContainer/MouseHSlider" to="Control/MarginContainer/VBoxContainer/InputOptions/HBoxContainer/MouseHSlider" method="_on_value_changed"]
